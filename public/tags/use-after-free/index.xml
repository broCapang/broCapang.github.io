<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Use-After-Free on Irfan Haziq&#39;s Site</title>
    <link>http://localhost:1313/tags/use-after-free/</link>
    <description>Recent content in Use-After-Free on Irfan Haziq&#39;s Site</description>
    <generator>Hugo -- 0.142.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Feb 2025 17:20:36 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/use-after-free/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pwnable.tw Hacknote</title>
      <link>http://localhost:1313/posts/pwnabletw-hacknote/</link>
      <pubDate>Thu, 13 Feb 2025 17:20:36 +0800</pubDate>
      <guid>http://localhost:1313/posts/pwnabletw-hacknote/</guid>
      <description>&lt;p&gt;This challenge involves exploiting Use-After-Free vulnerability. The note structure in this challenge stores &lt;code&gt;puts&lt;/code&gt; function pointer besides the note content pointer. By properly allocating and free-ing memory, full control on EIP will be achieved.&lt;/p&gt;
&lt;h1 id=&#34;initial-analysis&#34;&gt;Initial Analysis&lt;/h1&gt;
&lt;p&gt;The challenge provide 2 files, hacknote (the challenge binary) and libc_32.so.6 (the libc used in this challenge)&lt;/p&gt;
&lt;h2 id=&#34;file-analysis&#34;&gt;File Analysis&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file hacknote 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hacknote: ELF 32-bit LSB executable, Intel 80386, version &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;SYSV&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, dynamically linked, interpreter ./ld-2.23.so, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; GNU/Linux 2.6.32, BuildID&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;sha1&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;a32de99816727a2ffa1fe5f4a324238b2d59a606, stripped
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file libc_32.so.6 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libc_32.so.6: ELF 32-bit LSB shared object, Intel 80386, version &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;GNU/Linux&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, dynamically linked, interpreter /lib/ld-linux.so.2, BuildID&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;sha1&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;d26149b8dc15c0c3ea8a5316583757f69b39e037, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; GNU/Linux 2.6.32, stripped
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Security Mitigations:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
